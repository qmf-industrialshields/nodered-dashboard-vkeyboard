[{"id":"3e3a7c3611b96553","type":"ui-template","z":"flow-vkb-es","group":"","page":"e8e5d835bfca212c","ui":"","name":"ES Virtual keyboard","order":2,"width":0,"height":0,"head":"","format":"<!-- ===== Teclado ES \"Lite\" sin dependencias — optimizado para Raspberry Pi modo Kiosko =====\n-->\n<div id=\"vkb-root\" class=\"vkb hidden\" aria-hidden=\"true\">\n  <div class=\"vkb-bar\" aria-label=\"Mover teclado\">\n    <button class=\"vkb-dock\" title=\"Acoplar / Desacoplar\" aria-label=\"Acoplar / Desacoplar\">⤢</button>\n    <span class=\"vkb-title\">Teclado</span>\n    <button class=\"vkb-close\" title=\"Cerrar\" aria-label=\"Cerrar\">×</button>\n  </div>\n  <div class=\"vkb-keys\"></div>\n</div>\n\n<style>\n  /* ——— Estilos \"Lite\": foco en legibilidad y bajo coste de render ——— */\n  :root{ --pad:10px; --gap:8px; --btnh:54px; --btnmin:52px; --radius:8px; }\n  .vkb{\n    position:fixed; left:0; right:0; bottom:0; z-index:100000;\n    background:#f1f3f5; border-top:1px solid #bfc5ca;\n    user-select:none; -webkit-user-select:none; touch-action:manipulation;\n    max-width:100vw; box-sizing:border-box;\n  }\n  .vkb.hidden{ display:none }\n  .vkb[aria-hidden=\"false\"]{ display:block }\n  .vkb.floating{\n    width:680px; max-width:96vw; top:12px; left:12px; right:auto; bottom:auto; border:1px solid #bfc5ca; border-radius:10px;\n  }\n  .vkb-bar{\n    display:flex; align-items:center; gap:8px; padding:6px 8px; background:#e5e9ec; border-bottom:1px solid #bfc5ca;\n    cursor:grab; touch-action:none;\n  }\n  .vkb-title{ font:600 14px/1 system-ui,-apple-system,Segoe UI,Roboto,sans-serif }\n  .vkb-dock,.vkb-close{ border:0; background:#e5e9ec; font:600 16px/1 system-ui; cursor:pointer; padding:4px 6px; border-radius:6px }\n  .vkb-dock:active,.vkb-close:active{ background:#d7dde2 }\n  .vkb-close{ margin-left:auto; }\n  .vkb-keys{ padding:var(--pad); display:grid; gap:var(--gap); }\n  .vkb-row{ display:flex; gap:var(--gap); justify-content:center; flex-wrap:wrap; }\n  .vkb-key{\n    display:flex; align-items:center; justify-content:center;\n    height:var(--btnh); min-width:var(--btnmin); padding:0 10px;\n    border:1px solid #bfc5ca; border-radius:var(--radius); background:#fff; color:#111;\n    font:700 18px/1 system-ui,-apple-system,Segoe UI,Roboto,sans-serif;\n  }\n  .vkb-key:active{ background:#e9ecef }\n  .vkb-key.space{ min-width:min(48vw, 460px) }\n  .vkb-key.wide{ min-width:96px }\n  .vkb-key.small{ min-width:44px; font-weight:700 }\n  .vkb-key.active{ outline:2px solid #2b7bcc; outline-offset:-2px }\n</style>\n\n<script>\n(function(){\n  // ===== Estado =====\n  let currentInput = null;\n  let shift = false;\n  let layout = 'text';       // 'text' | 'num' | 'sym'\n  let pendingAccent = null;  // null | 'acute' | 'grave' | 'diaer'\n  let isFloating = false;\n  let openedAt = 0;\n  let lastBlurAt = 0;\n  let suppressCloseUntil = 0;\n\n  // Posición flotante simple\n  let posX = 12, posY = 12;\n  const MARGIN = 8;\n\n  const root = document.getElementById('vkb-root');\n  const keysHost = root.querySelector('.vkb-keys');\n  const bar = root.querySelector('.vkb-bar');\n  const btnDock = root.querySelector('.vkb-dock');\n  const btnX = root.querySelector('.vkb-close');\n\n  // ===== Layouts (ES) — letras/números + símbolos ISO =====\n  const ROWS_TEXT = [\n    ['1','2','3','4','5','6','7','8','9','0'],\n    ['q','w','e','r','t','y','u','i','o','p'],\n    ['a','s','d','f','g','h','j','k','l','ñ'],\n    ['z','x','c','v','b','n','m','¨','´','`'],\n    ['SYM','MAYUS','ESPACIO','ç','BORRAR','ENTER']\n  ];\n  const ROWS_NUM = [\n    ['1','2','3'],['4','5','6'],['7','8','9'],['0','BORRAR','ENTER']\n  ];\n  const ROWS_SYM = [\n    ['!','\"','·','$','%','&','/','(',')','='],\n    ['?','¿','¡','@','#','+','-','*',\"'\",'_'],\n    [':',';','<','>','{','}','[',']','\\\\','|'],\n    ['ABC',',','.','~','^','º','ª','BORRAR','ENTER'],\n    ['ESPACIO']\n  ];\n\n  // ===== Util =====\n  const vw = () => Math.max(document.documentElement.clientWidth, window.innerWidth||0);\n  const vh = () => Math.max(document.documentElement.clientHeight, window.innerHeight||0);\n  const clamp = (v,min,max) => Math.max(min, Math.min(max, v));\n  const composedPath = ev => (typeof ev.composedPath==='function') ? ev.composedPath() : (ev.path || [ev.target]);\n  const pathIncludes = (node, path) => path && path.indexOf(node)!==-1;\n  function isD2Input(node){\n    if(!node || !node.tagName) return false;\n    const tag = node.tagName.toUpperCase();\n    if((tag==='INPUT' || tag==='TEXTAREA') && !node.disabled && !node.readOnly){\n      if((node.classList && node.classList.contains('v-field__input')) || (node.id && node.id.startsWith('input-v-')) || tag==='TEXTAREA') return true;\n    }\n    return false;\n  }\n  function anyInputFocused(){\n    const a = document.activeElement;\n    return isD2Input(a);\n  }\n  function applyFloatingPosition(){ root.style.left = posX+'px'; root.style.top = posY+'px'; }\n  function clampFloating(){\n    if (!isFloating) return;\n    const w = root.offsetWidth, h = root.offsetHeight;\n    posX = clamp(posX, MARGIN, vw()-w-MARGIN);\n    posY = clamp(posY, MARGIN, vh()-h-MARGIN);\n    applyFloatingPosition();\n  }\n\n  // ===== Apertura/Cierre =====\n  function openForInput(el){\n    currentInput = el;\n    layout = (el.type && el.type.toLowerCase()==='number') ? 'num' : 'text';\n    shift = false; pendingAccent = null;\n    buildKeyboard();\n    root.classList.remove('hidden');\n    root.setAttribute('aria-hidden','false');\n    const now = performance.now();\n    openedAt = now;\n    suppressCloseUntil = now + 600;  // ⟵ evita cierre por el mismo tap/blur inicial\n    try{ el.focus(); }catch(e){}\n    el.addEventListener('blur', onInputBlur, { once:true, capture:true });\n    autoRepositionIfOverlaps(el);\n  }\n  function closeKeyboard(){\n    root.classList.add('hidden');\n    root.setAttribute('aria-hidden','true');\n    currentInput = null; shift = false; pendingAccent = null;\n  }\n  function onInputBlur(){\n    lastBlurAt = performance.now();\n    setTimeout(()=>{\n      const now = performance.now();\n      if (now < suppressCloseUntil) return;     // aún en ventana de gracia\n      if (anyInputFocused()) return;            // otro input tomó foco → no cerrar\n      if (root.getAttribute('aria-hidden')==='false') closeKeyboard();\n    }, 140);\n  }\n\n  // ===== Inserción =====\n  function insertText(txt){\n    if(!currentInput) return;\n    const el = currentInput;\n    const start = (el.selectionStart!=null) ? el.selectionStart : (el.value?el.value.length:0);\n    const end   = (el.selectionEnd!=null)   ? el.selectionEnd   : (el.value?el.value.length:0);\n    const val   = el.value || '';\n    el.value = val.slice(0,start) + txt + val.slice(end);\n    try{ el.setSelectionRange(start+txt.length, start+txt.length); }catch(e){}\n    el.dispatchEvent(new Event('input',{bubbles:true}));\n    el.dispatchEvent(new Event('change',{bubbles:true}));\n  }\n  function backspace(){\n    if(!currentInput) return;\n    const el = currentInput;\n    const start = (el.selectionStart!=null) ? el.selectionStart : (el.value?el.value.length:0);\n    const end   = (el.selectionEnd!=null)   ? el.selectionEnd   : (el.value?el.value.length:0);\n    if(start===0 && end===0) return;\n    let s = start, e = end; if(s===e) s = Math.max(0, s-1);\n    const val = el.value || '';\n    el.value = val.slice(0,s) + val.slice(e);\n    try{ el.setSelectionRange(s, s); }catch(e){}\n    el.dispatchEvent(new Event('input',{bubbles:true}));\n    el.dispatchEvent(new Event('change',{bubbles:true}));\n  }\n\n  // ===== Acentos (teclas muertas) =====\n  function applyAccentIfNeeded(ch){\n    if(!pendingAccent) return ch;\n    const isUpper = ch.toUpperCase()===ch && ch.toLowerCase()!==ch;\n    const base = ch.toLowerCase();\n    let out = ch;\n    if(pendingAccent==='acute'){\n      const map = { a:'á', e:'é', i:'í', o:'ó', u:'ú' };\n      out = map[base] ? (isUpper ? map[base].toUpperCase() : map[base]) : '´'+ch;\n    } else if(pendingAccent==='grave'){\n      const map = { a:'à', e:'è', i:'ì', o:'ò', u:'ù' };\n      out = map[base] ? (isUpper ? map[base].toUpperCase() : map[base]) : '`'+ch;\n    } else if(pendingAccent==='diaer'){\n      const map = {a:'ä',e:'ë',i:'ï',o:'ö',u:'ü'}; \n      out = map[base] ? (isUpper ? map[base].toUpperCase() : map[base]) : '¨'+ch;\n    }\n\n    pendingAccent = null; highlightAccentKeys();\n    return out;\n  }\n  function highlightAccentKeys(){\n    document.querySelectorAll('.vkb-key[data-key=\"´\"], .vkb-key[data-key=\"¨\"], .vkb-key[data-key=\"`\"]').forEach(btn=>{\n      const active = (pendingAccent==='acute' && btn.dataset.key==='´') || (pendingAccent==='grave' && btn.dataset.key==='`') || (pendingAccent==='diaer' && btn.dataset.key==='¨');\n      btn.classList.toggle('active', !!active);\n    });\n  }\n\n  // ===== Render =====\n  function buildKeyboard(){ keysHost.innerHTML=''; renderRows(); }\n  function currentRows(){ return (layout==='num') ? ROWS_NUM : (layout==='sym') ? ROWS_SYM : ROWS_TEXT; }\n  function renderRows(){\n    keysHost.innerHTML='';\n    currentRows().forEach(r=>{\n      const row = document.createElement('div'); row.className='vkb-row';\n      r.forEach(k=> row.appendChild(makeKey(k)) );\n      keysHost.appendChild(row);\n    });\n    highlightAccentKeys();\n  }\n  function makeKey(label){\n    const btn = document.createElement('button');\n    btn.className='vkb-key';\n    btn.dataset.key = label;\n\n    let shown = label;\n    if(label==='ESPACIO'){ shown='Espacio'; btn.classList.add('space'); }\n    else if(label==='BORRAR'){ shown='⌫'; btn.classList.add('wide'); }\n    else if(label==='ENTER'){ shown='⏎'; btn.classList.add('wide'); }\n    else if(label==='MAYUS'){ shown = shift ? 'Mayús ▲' : 'Mayús ▼'; btn.classList.add('wide'); }\n    else if(label==='SYM'){ shown = 'SYM'; btn.classList.add('wide'); }\n    else if(label==='ABC'){ shown = 'ABC'; btn.classList.add('wide'); }\n    else if(label==='´' || label==='`' || label==='¨'){ btn.classList.add('small'); }\n    else { if(shift) shown = label.toUpperCase(); }\n\n    btn.textContent = shown;\n    btn.addEventListener('click', onKeyClick);\n    btn.addEventListener('pointerdown', ev=>{ ev.preventDefault(); suppressCloseUntil = performance.now() + 400; });\n    return btn;\n  }\n  function onKeyClick(e){\n    const key = e.currentTarget.dataset.key;\n    if(!currentInput && !['SYM','ABC','MAYUS'].includes(key)) return;\n\n    if(key==='SYM'){ layout='sym'; pendingAccent=null; renderRows(); clampFloating(); return; }\n    if(key==='ABC'){ layout='text'; pendingAccent=null; renderRows(); clampFloating(); return; }\n    if(key==='MAYUS'){ shift=!shift; renderRows(); return; }\n\n    if(key==='ENTER'){ closeKeyboard(); return; }\n    if(key==='BORRAR'){ backspace(); return; }\n    if(key==='ESPACIO'){ insertText(' '); return; }\n\n    if(key==='´'){ pendingAccent='acute'; highlightAccentKeys(); return; }\n    if(key==='`'){ pendingAccent='grave'; highlightAccentKeys(); return; }\n    if(key==='¨'){ pendingAccent='diaer'; highlightAccentKeys(); return; }\n\n    let ch = key;\n    if(shift) ch = ch.toUpperCase();\n    ch = applyAccentIfNeeded(ch);\n    insertText(ch);\n    if(shift && layout==='text'){ shift=false; renderRows(); }\n  }\n\n  // ===== Flotante / Arrastre (simple y robusto) =====\n  const drag = {active:false, id:null, sx:0, sy:0, bx:0, by:0};\n  function startDrag(e){\n    if (!isFloating) return;\n    if (e.target.closest('.vkb-dock, .vkb-close')) return;\n    drag.active = true; drag.id = e.pointerId;\n    drag.sx = e.clientX; drag.sy = e.clientY; drag.bx = posX; drag.by = posY;\n    bar.classList.add('dragging');\n    window.addEventListener('pointermove', onDragMove, true);\n    window.addEventListener('pointerup', onDragEnd, true);\n    window.addEventListener('pointercancel', onDragEnd, true);\n    suppressCloseUntil = performance.now() + 500;\n  }\n  function onDragMove(e){\n    if (!drag.active || drag.id!==e.pointerId) return;\n    posX = drag.bx + (e.clientX - drag.sx);\n    posY = drag.by + (e.clientY - drag.sy);\n    clampFloating();\n  }\n  function onDragEnd(e){\n    if (drag.id!==e.pointerId) return;\n    drag.active = false; bar.classList.remove('dragging');\n    window.removeEventListener('pointermove', onDragMove, true);\n    window.removeEventListener('pointerup', onDragEnd, true);\n    window.removeEventListener('pointercancel', onDragEnd, true);\n  }\n  bar.addEventListener('pointerdown', e=>{ e.preventDefault(); startDrag(e); });\n\n  btnDock.addEventListener('click', e=>{\n    e.preventDefault(); e.stopPropagation();\n    suppressCloseUntil = performance.now() + 600; // ⟵ evita cierre por el click del botón\n    if (isFloating){\n      isFloating = false;\n      root.classList.remove('floating');\n      root.style.left=''; root.style.top=''; root.style.right='0'; root.style.bottom='0';\n    } else {\n      isFloating = true;\n      root.classList.add('floating');\n      root.style.right=''; root.style.bottom='';\n      // colocar visible abajo-izquierda\n      posX = MARGIN; posY = vh() - (root.offsetHeight||280) - (MARGIN+8);\n      clampFloating();\n    }\n  });\n  btnX.addEventListener('click', e=>{ e.preventDefault(); e.stopPropagation(); closeKeyboard(); });\n  window.addEventListener('resize', clampFloating);\n\n  // ===== Evitar tapar input cuando está dockado =====\n  function autoRepositionIfOverlaps(el){\n    try{\n      if (!isFloating){\n        const ir = el.getBoundingClientRect();\n        const kbH = root.offsetHeight || 260;\n        if (ir.bottom > vh() - kbH){\n          isFloating = true; root.classList.add('floating');\n          root.style.right=''; root.style.bottom='';\n          const w = root.offsetWidth || 640, h = root.offsetHeight || kbH;\n          posX = clamp(ir.left - 8, MARGIN, vw()-w-MARGIN);\n          posY = clamp(ir.top - h - 8, MARGIN, vh()-h-MARGIN);\n          applyFloatingPosition();\n          suppressCloseUntil = performance.now() + 600; // ⟵ gracia extra tras recolocar\n        }\n      } else {\n        clampFloating();\n      }\n    }catch(e){}\n  }\n\n  // ===== Global: apertura/cierre =====\n  function onPointerDownGlobal(ev){\n    const now = performance.now();\n    const path = composedPath(ev);\n    // ⟵ Ignorar cualquier pointerdown dentro de la ventana de gracia o dentro del teclado\n    if (now - openedAt < 400) return;\n    if (now < suppressCloseUntil) return;\n    if (pathIncludes(root, path)) return;\n\n    for (let i=0;i<path.length;i++){\n      const n = path[i];\n      if (isD2Input(n)){\n        lastBlurAt = 0;\n        if (currentInput===n && root.getAttribute('aria-hidden')==='false') return;\n        openForInput(n);\n        return;\n      }\n    }\n    if (root.getAttribute('aria-hidden')==='false') closeKeyboard();\n  }\n  function onKeyDownGlobal(e){\n    if (root.getAttribute('aria-hidden')==='false' && (e.key==='Enter' || e.keyCode===13)){\n      e.preventDefault(); closeKeyboard();\n    }\n  }\n  window.addEventListener('pointerdown', onPointerDownGlobal, true);\n  window.addEventListener('keydown', onKeyDownGlobal, true);\n})();\n</script>","storeOutMessages":true,"passthru":true,"resendOnRefresh":true,"templateScope":"widget:page","className":"","x":370,"y":160,"wires":[[]]},{"id":"2f20a1cc07a4a4a7","type":"ui-text-input","z":"flow-vkb-es","group":"ui_group_demo","name":"","label":"Full name","order":2,"width":0,"height":0,"topic":"topic","topicType":"msg","mode":"text","tooltip":"","delay":300,"passthru":true,"sendOnDelay":false,"sendOnBlur":true,"sendOnEnter":true,"className":"","clearable":false,"sendOnClear":false,"icon":"","iconPosition":"left","iconInnerPosition":"inside","x":360,"y":240,"wires":[[]]},{"id":"9581962db6084396","type":"ui-number-input","z":"flow-vkb-es","group":"ui_group_demo","name":"","label":"Age","order":1,"width":0,"height":0,"topic":"topic","topicType":"msg","min":0,"max":"100","step":1,"tooltip":"","passthru":true,"sendOnBlur":true,"sendOnEnter":true,"className":"","clearable":false,"icon":"","iconPosition":"left","iconInnerPosition":"inside","spinner":"default","x":350,"y":300,"wires":[[]]},{"id":"e8e5d835bfca212c","type":"ui-page","name":"Page Name","ui":"24554fea59f1eda5","path":"/page3","icon":"home","layout":"grid","theme":"db0f0791f0e51609","breakpoints":[{"name":"Default","px":"0","cols":"3"},{"name":"Tablet","px":"576","cols":"6"},{"name":"Small Desktop","px":"768","cols":"9"},{"name":"Desktop","px":"1024","cols":"12"}],"order":1,"className":"","visible":"true","disabled":"false"},{"id":"ui_group_demo","type":"ui-group","name":"Demo","page":"e8e5d835bfca212c","width":"12","height":"","order":1,"showTitle":true,"className":"","visible":"true","disabled":"false","groupType":"default"},{"id":"24554fea59f1eda5","type":"ui-base","name":"uiname","path":"/dashboard","appIcon":"","includeClientData":true,"acceptsClientConfig":["ui-notification","ui-control"],"showPathInSidebar":false,"headerContent":"page","navigationStyle":"icon","titleBarStyle":"default","showReconnectNotification":true,"notificationDisplayTime":"1","showDisconnectNotification":true,"allowInstall":true},{"id":"db0f0791f0e51609","type":"ui-theme","name":"Theme Name","colors":{"surface":"#0b4068","primary":"#0b4068","bgPage":"#eeeeee","groupBg":"#ffffff","groupOutline":"#cccccc"},"sizes":{"density":"comfortable","pagePadding":"12px","groupGap":"12px","groupBorderRadius":"4px","widgetGap":"12px"}}]